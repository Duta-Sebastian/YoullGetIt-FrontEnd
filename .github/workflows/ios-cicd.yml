name: Build and Deploy iOS

on:
  push:
    branches: [ '**' ]  # Every push to any branch
  pull_request:
    branches: [ main ]   # PRs targeting main branch

jobs:
  build-development:
    name: Build Development IPA
    runs-on: macos-latest
    if: github.event_name == 'push'  # Runs on every push
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Clean iOS build
      run: |
        cd ios
        rm -rf Pods
        rm -rf .symlinks
        rm -rf Flutter/Flutter.framework
        rm -rf Flutter/Flutter.podspec
        rm -f Podfile.lock
        
    - name: Install CocoaPods dependencies
      run: |
        cd ios
        pod install --repo-update
      
    # - name: Run tests
    #   run: flutter test
      
    - name: Import Development Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.DEV_CERTIFICATES_P12 }}
        p12-password: ${{ secrets.DEV_CERTIFICATES_P12_PASSWORD }}
        
    - name: Download Development Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v3
      with:
        bundle-id: com.youllgetit.app
        profile-type: IOS_APP_DEVELOPMENT
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Setup Code Signing (Development)
      run: |
        # Debug: Check current signing style
        echo "Current CODE_SIGN_STYLE settings:"
        grep -n "CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
        
        # FIRST: Change all CODE_SIGN_STYLE from Automatic to Manual
        echo "Changing CODE_SIGN_STYLE from Automatic to Manual..."
        sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' ios/Runner.xcodeproj/project.pbxproj
        
        # SECOND: Add provisioning profile (on separate lines)
        echo "Adding provisioning profile..."
        sed -i '' '/CODE_SIGN_STYLE = Manual;/a\
        		PROVISIONING_PROFILE_SPECIFIER = "You'\''ll Get It - Development";' ios/Runner.xcodeproj/project.pbxproj
        
        # Verify changes were made
        echo "After changes - CODE_SIGN_STYLE lines:"
        grep -n "CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
        
        echo "After changes - PROVISIONING_PROFILE_SPECIFIER lines:"
        grep -n "PROVISIONING_PROFILE_SPECIFIER" ios/Runner.xcodeproj/project.pbxproj || echo "No PROVISIONING_PROFILE_SPECIFIER found"

    - name: Flutter Build iOS (Development)
      run: flutter build ios --release
      
    - name: Build and Archive with Xcode (Development)
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath $RUNNER_TEMP/Runner-Dev.xcarchive \
          archive \
          CODE_SIGN_IDENTITY="iPhone Developer" \
          PROVISIONING_PROFILE_SPECIFIER="You'll Get It - Development"
          
    - name: Export Development IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
          -archivePath $RUNNER_TEMP/Runner-Dev.xcarchive \
          -exportPath $RUNNER_TEMP/Development \
          -exportOptionsPlist ExportOptions-Development.plist
          
    - name: Upload Development IPA as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-development-ipa
        path: ${{ runner.temp }}/Development/*.ipa

  build-production:
    name: Build App Store IPA
    runs-on: macos-latest
    if: github.event_name == 'pull_request' && github.base_ref == 'main'  # PRs to main
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'
        
    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Clean iOS build
      run: |
        cd ios
        rm -rf Pods
        rm -rf .symlinks
        rm -rf Flutter/Flutter.framework
        rm -rf Flutter/Flutter.podspec
        rm -f Podfile.lock
        
    - name: Install CocoaPods dependencies
      run: |
        cd ios
        pod install --repo-update
      
    # - name: Run tests
    #   run: flutter test
      
    - name: Import Distribution Code-Signing Certificates
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.DIST_CERTIFICATES_P12 }}
        p12-password: ${{ secrets.DIST_CERTIFICATES_P12_PASSWORD }}
        
    - name: Download App Store Provisioning Profiles
      uses: Apple-Actions/download-provisioning-profiles@v3
      with:
        bundle-id: com.youllgetit.app
        profile-type: IOS_APP_STORE
        issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
        api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
        api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}
        
    - name: Setup Code Signing (Production)
      run: |
        # Debug: Check current signing style
        echo "Current CODE_SIGN_STYLE settings:"
        grep "CODE_SIGN_STYLE" ios/Runner.xcodeproj/project.pbxproj || echo "No CODE_SIGN_STYLE found"
        
        # Set code signing to manual for ALL configurations
        sed -i '' 's/CODE_SIGN_STYLE = Automatic;/CODE_SIGN_STYLE = Manual;/g' ios/Runner.xcodeproj/project.pbxproj
        
        # Add CODE_SIGN_STYLE = Manual if it doesn't exist
        sed -i '' '/DEVELOPMENT_TEAM = "JPXGBUG6ZW";/a\
        		CODE_SIGN_STYLE = Manual;' ios/Runner.xcodeproj/project.pbxproj
        
        # Add production provisioning profile to ALL configurations
        sed -i '' '/CODE_SIGN_STYLE = Manual;/a\
        		PROVISIONING_PROFILE_SPECIFIER = "You'\''ll Get It";' ios/Runner.xcodeproj/project.pbxproj
        
        # Verify changes
        echo "After changes:"
        grep -A5 -B5 "PROVISIONING_PROFILE_SPECIFIER" ios/Runner.xcodeproj/project.pbxproj || echo "PROVISIONING_PROFILE_SPECIFIER not found"
        
    - name: Flutter Build iOS (Production)
      run: flutter build ios --release
      
    - name: Build and Archive with Xcode (Production)
      run: |
        cd ios
        xcodebuild -workspace Runner.xcworkspace \
          -scheme Runner \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath $RUNNER_TEMP/Runner-Prod.xcarchive \
          archive \
          CODE_SIGN_IDENTITY="iPhone Distribution" \
          PROVISIONING_PROFILE_SPECIFIER="You'll Get It"
          
    - name: Export App Store IPA
      run: |
        cd ios
        xcodebuild -exportArchive \
          -archivePath $RUNNER_TEMP/Runner-Prod.xcarchive \
          -exportPath $RUNNER_TEMP/AppStore \
          -exportOptionsPlist ExportOptions-AppStore.plist
          
    - name: Upload to App Store Connect
      run: |
        # List the actual IPA files created
        echo "IPA files created:"
        ls -la "$RUNNER_TEMP/AppStore/"
        
        # Find the actual IPA file (might be named differently)
        IPA_FILE=$(find "$RUNNER_TEMP/AppStore" -name "*.ipa" | head -1)
        echo "Using IPA file: $IPA_FILE"
        
        xcrun altool --upload-app \
          --type ios \
          --file "$IPA_FILE" \
          --username "${{ secrets.APPLE_ID }}" \
          --password "${{ secrets.APPLE_APP_PASSWORD }}" \
          --verbose
          
    - name: Upload App Store IPA as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-appstore-ipa
        path: ${{ runner.temp }}/AppStore/*.ipa